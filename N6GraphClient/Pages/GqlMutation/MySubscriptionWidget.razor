@using N6GraphClient.GraphQL
@using StrawberryShake.Extensions
@implements IDisposable
@inject IN6GraphQLabClient glc

<div style="border:solid 2px red; padding:8px; margin-bottom:8px;">
  <h3>MySubscriptionWidget</h3>

  @if(session != null)
  {
    <p>listen...</p>    
  }

  @if (receivedMessage != null)
  {
  <pre>
      @System.Text.Json.JsonSerializer.Serialize(receivedMessage, jsonOptions)
  </pre>
  }

  <button @onclick=HandleSubscribe>啟動訂閱</button>
  <button @onclick=CancelSubscribe>取消訂閱</button>
</div>

@code {
  //## Resource
  System.Text.Json.JsonSerializerOptions jsonOptions = new System.Text.Json.JsonSerializerOptions
  {
    WriteIndented = true,
    Encoder = System.Text.Encodings.Web.JavaScriptEncoder.UnsafeRelaxedJsonEscaping
  };

  //## State
  IDisposable? session = null;
  IListenProductAdded_OnProductAdded? receivedMessage = null;

  void IDisposable.Dispose()
  {
    session?.Dispose();
    session = null;
  }

  /// <summary>
  /// 啟動訂閱
  /// </summary>
  Task HandleSubscribe()
  {
    session = glc.ListenProductAdded
            .Watch()
            .Subscribe(async result =>
            {
              // do something with the result
              receivedMessage = result.Data!.OnProductAdded;
              await InvokeAsync(StateHasChanged);
            });

    return Task.CompletedTask;
  }

  /// <summary>
  /// 取消訂閱
  /// </summary>
  Task CancelSubscribe()
  {
    session?.Dispose();
    session = null;
    return Task.CompletedTask;
  }
}
